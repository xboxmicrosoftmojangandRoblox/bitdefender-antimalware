    #include <iostream> 
    #include <fstream> 
    #include <string> 
    #include <vector> 
     
    class Antivirus { 
    public: 
        void loadSignatures(const std::string& signatureFile); 
        bool scanFile(const std::string& filePath); 
     
    private: 
        std::vector<std::string> signatures; 
    }; 
     
    void Antivirus::loadSignatures(const std::string& signatureFile) { 
        std::ifstream file(signatureFile); 
        std::string signature; 
        while (std::getline(file, signature)) { 
            signatures.push_back(signature); 
        } 
    } 
     
    bool Antivirus::scanFile(const std::string& filePath) { 
        std::ifstream file(filePath, std::ios::binary); 
        if (!file) return false; 
     
        std::string content((std::istreambuf_iterator<char>(file)), std::istreambuf_iterator<char>()); 
        for (const auto& sig : signatures) { 
            if (content.find(sig) != std::string::npos) { 
                std::cout << "Malware detected in " << filePath << std::endl; 
                return true; 
            } 
        } 
        return false; 
    } 
     
    int main() { 
        Antivirus av; 
        av.loadSignatures("signatures.txt"); 
        av.scanFile("sample_file.exe"); 
        return 0; 
    } 
